# -*- coding: utf-8 -*-
"""algoritmica

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16KMLOuYYvBkObTJGJFr69HEV0J3y8i_C

Codigozzz
"""



def cifrar_mensaje1():
    print("Ingrese el mensaje, puede hacerlo en lineas de texto : ")
    lineas = []
    while True:
        linea = input()
        if not linea:
            break
        lineas.append(linea)
    # Obtiene las palabras y las almacena en una lista
    palabras = []
    for linea in lineas:
        palabras.extend(linea.split())
    # Ordena las palabras alfabeticamente
    palabras.sort()
    # Escribe las pantallas en orden alfabetico
    print("mensaje cifrado :")
    for palabra in palabras:
        print(palabra)
    input("\nPresione una tecla para continuar...")

def cifrar_mensaje2(mensaje):
    cifrado = ""
    for caracter in mensaje:
        if caracter.isalpha():
            codigo = ord(caracter) + 3  # codigo ASCII del caracter y le suma 3
            if caracter.islower():
                if codigo > ord('z'):
                    codigo -= 26  # Si se pasa del limite de las letras minusculas, retrocede al principio
            else:
                if codigo > ord('Z'):
                    codigo -= 26  # Si se pasa del limite de las letras mayusculas, retrocede al principio
            cifrado += chr(codigo)  # Agrega el caracter cifrado al mensaje cifrado
        else:
            cifrado += caracter  # Mantiene los caracteres que no son letras sin modificar
    return cifrado

def cifrar_mensaje3(mensaje, correspondencia):
    mensaje_cifrado = " "
    for caracter in mensaje:
        if caracter.isalpha():  # para verificar si el caracter es una letra del alfabeto utilizando el metodo isalpha()
            indice = ord(caracter.lower()) - ord('a')

            if indice < len(correspondencia):  # si el indice esta dentro del rango
                mensaje_cifrado += correspondencia[indice]  # sustituir el caracter por lo que se puso en la correspondencia
            else:
                mensaje_cifrado += caracter  # si no esta en el rango, se mantiene el caracter
        else:
            mensaje_cifrado += caracter  # si no esta en el alfabeto, se mantiene el caracter

    return mensaje_cifrado


def cifrar_mensaje4(texto, cifrado):
    texto_encriptado = ""
    for letra in texto:
        if letra.islower():
            indice = ord(letra) - ord('a')
            letra_encriptada = cifrado[indice] if indice < len(cifrado) else letra
            texto_encriptado += letra_encriptada
        else:
            texto_encriptado += letra
    return texto_encriptado

def cifrar_mensaje5(cantidad):
    mensajes_cifrados = []
    mensajes_descifrados = []
    alfabeto_normal = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    alfabeto_codificado = []
    cadena = ""
    for i in range(cantidad):
        while True:
            cifrado = list(input(f"\nIngrese el mensaje codificado {i + 1} en mayusculas: ")) #Ingreso unico de mayusculas
            if str(cifrado).islower():
                print("No se ingreso el mensaje en mayusculas, ingrese nuevamente")
            else:
                break

        mensajes_cifrados.append(cifrado)
        while True:
            alfabeto_codificado = list(input("Ingrese el alfabeto codificado: "))
            if str(alfabeto_codificado).islower():
                print("No se ingreso el mensaje en mayusculas")
            elif len(alfabeto_codificado)!=26:
                print("Alfabeto incompleto o excedente")
                continue
            else:
                break

        for a, letra in enumerate(cifrado): #Uso de un indice y el valor del elemento
            for i in range(26):
                if letra == alfabeto_normal[i]:
                    cifrado[a] = alfabeto_codificado[i] #Asignar el nuevo valor
        cadena = "".join(cifrado) #Concatenar la cadena
        mensajes_descifrados.append(cadena)

    for i, mensaje in enumerate(mensajes_descifrados):
        print(f"{i+1} MENSAJE DESCIFRADO: ", mensaje)
    input("\nPresione una tecla para continuar...")


print("             ____                                       ")
print("            |  _ |_  __ ___ _   _ ___  ___ ____ ___     ")
print("            |  __| |/_/| _ |\ V // -_// _/  || | _ |    ")
print("            |_|  |_ /  |___| |_| \___|\__\  || |___|    ")
print("                                                        ")


while True:
    print("          _____________________________________________")
    print("         |                                             |")
    print("         |-------------------- MENU -------------------|")
    print("         |    Elija un tipo de cifrado:                |")
    print("         |    1. Lineas de texto en orden alfabetico   |")
    print("         |    2. Encriptacion simple                   |")
    print("         |    3. Sustitucion de carácteres             |")
    print("         |    4. Encriptación x función de cifrado     |")
    print("         |    5. Criptografia                          |")
    print("         |            Ingrese 0 para salir             |")
    print("         |_____________________________________________|")
    op = int(input("\nOpcion: "))

    if op == 1:
        print("Ha elegido el primer cifrado")
        cifrar_mensaje1()

    elif op== 2:
        print("\nHa elegido el segundo cifrado")
        mensaje = input("Ingrese el mensaje a cifrar: ")
        mensaje_cifrado = cifrar_mensaje2(mensaje)
        print("Mensaje cifrado:", mensaje_cifrado)
        input("\nPresione una tecla para continuar...")

    elif op== 3:
        print("\nHa elegido el tercer cifrado")
        original = input("Digite el mensaje que desea cifrar: ")
        correspondencia = input("Digite las correspondencias de los caracteres: ")
        mensaje_cifrado = cifrar_mensaje3(original, correspondencia)
        print("Mensaje cifrado: ", mensaje_cifrado)
        input("\nPresione una tecla para continuar...")

    elif op== 4:
        print("\nHa elegido el cuarto cifrado")
        texto = str(input("Ingrese el mensaje a cifrar : "))
        cifrado = ['z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n', 'm', 'l', 'k', 'j', 'i', 'h', 'g','f', 'e', 'd', 'c', 'b', 'a']
        texto_encriptado = cifrar_mensaje4(texto, cifrado)
        print("Mensaje cifrado:", texto_encriptado)
        input("\nPresione una tecla para continuar...")

    elif op== 5:
        print("\nHa elegido el quinto cifrado")
        while True:
            cantidad = int(input("Ingrese la cantidad de mensajes a decodificar: "))
            if cantidad < 1 or cantidad > 1000:
                print("La cantidad no es valida o se ha excedido la capacidad...")
            else:
                break
        cifrar_mensaje5(cantidad)

    elif op== 0:
        break

    else:
        print("Opcion invalida. Por favor, elija una opcion valida.")

print("El programa ha terminado.")